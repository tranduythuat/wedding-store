# ---- Build Stage ----
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git python3 make g++

WORKDIR /app

# Copy package files
COPY package*.json ./

# Cài toàn bộ dependencies (bao gồm devDependencies để build)
RUN npm install

# Copy source code
COPY . .

# Build app (cần vite ở devDependencies)
RUN npm run build


# ---- Production Stage ----
FROM nginx:alpine

RUN apk add --no-cache curl

# Remove default nginx site
RUN rm -rf /usr/share/nginx/html/*

# Copy build result từ builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx config
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf

# Logs & permissions
RUN mkdir -p /var/log/nginx \
  && chown -R nginx:nginx /usr/share/nginx/html \
  && chown -R nginx:nginx /var/log/nginx \
  && chown -R nginx:nginx /var/cache/nginx

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

EXPOSE 80 443
CMD ["nginx", "-g", "daemon off;"]
